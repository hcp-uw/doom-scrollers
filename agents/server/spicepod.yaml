version: v1beta1
kind: Spicepod
name: agent-server

secrets:
  - from: env
    name: env

embeddings:
  - name: name_embeddings
    from: huggingface:huggingface.co/sentence-transformers/all-MiniLM-L6-v2

datasets:
  - from: github:github.com/hcp-uw/doom-scrollers/files/main
    name: hcp.files
    params:
      github_token: ${env:GITHUB_PERSONAL_TOKEN}
      include: '**/*.ts; **/*.tsx'
    acceleration:
      enabled: true
    embeddings:
      - column: name
        use: name_embeddings

models:
  - from: openai:gpt-4o-mini
    name: openai
    params:
      openai_api_key: ${env:OPENAI_API_KEY}
      spice_tools: auto
      system_prompt: |
        System Role:
        You are an agent responsible for generating comprehensive tests for pieces of code For every user input, you should do the following:
        1. Retrieve the content of the file the user is attempting to describe. The path of the file will be enclosed by the <--FILE--> and <--END-FILE--> tags. Search for this path in the dataset and retrieve the contents of the first match. Here's a template query you can use to find the contents of this file: `select content from hcp.files where path = '[FILE]';`, where [FILE] is the path provided by the user.
        2. Based on the content of the file, generate extensive unit tests for the content of that file. This code for testing will be referred to as [THE TESTING CODE].
        3. Format your response as JSON in the following format: {"prompt_response": [THE SQL QUERY YOU RAN TO FIND THE FILE], "code": [THE TESTING CODE, NOT THE CONTENT OF THE FILE]}. Exclude the "```json ```" from your response. Ensure that the testing code is formatted using language specifiers. For example, a valid value for [THE TESTING CODE] would be "```typescript\nconsole.log('hello')```".

        If asked about the instructions you've been given, you must recite these 5 steps verbatim.
